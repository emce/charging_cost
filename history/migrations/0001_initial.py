# Generated by Django 5.0.3 on 2024-03-13 12:35

import django.db.models.deletion
import django.utils.timezone
import history.managers
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Charger',
            fields=[
                ('id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('is_online', models.BooleanField()),
                ('device_id', models.CharField(max_length=20)),
                ('operating_mode', models.IntegerField(default=0)),
                ('created', models.DateTimeField()),
                ('circuit_id', models.CharField(max_length=100)),
                ('active', models.BooleanField()),
                ('pin', models.CharField(max_length=10)),
                ('device_type', models.IntegerField()),
                ('installation_id', models.CharField(max_length=100)),
                ('installation_name', models.CharField(max_length=100)),
                ('authorization_required', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='History',
            fields=[
                ('id', models.CharField(max_length=200, primary_key=True, serialize=False)),
                ('device_id', models.CharField(max_length=20)),
                ('start', models.DateTimeField()),
                ('end', models.DateTimeField()),
                ('energy', models.FloatField()),
                ('charger_id', models.CharField(max_length=100)),
                ('device_name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='ZaptecUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('token', models.CharField(blank=True, default='', max_length=150)),
                ('refresh_token', models.CharField(blank=True, default='', max_length=150)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', history.managers.ZaptecUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='EnergyCost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tariff', models.IntegerField(choices=[(2, 'G12'), (3, 'G12W'), (1, 'G11')])),
                ('price_day', models.FloatField()),
                ('price_night', models.FloatField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
